plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

def selenideVersion = '6.16.0',
    restAssuredVersion = '5.3.1',
    allureVersion = '2.24.0'

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

dependencies {
    testImplementation(
            'io.rest-assured:rest-assured:5.3.1',
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'org.slf4j:slf4j-simple:2.0.7',
            'io.rest-assured:json-schema-validator:5.3.1',
            "io.rest-assured:rest-assured:$restAssuredVersion",
            'org.assertj:assertj-core:3.24.2',
            "com.codeborne:selenide:$selenideVersion",
            'io.qameta.allure:allure-selenide:2.23.0',
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            'com.github.javafaker:javafaker:1.0.2',
            'org.aeonbits.owner:owner:1.0.12'
    )

    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.2')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags("remote")
    }

    tasks.withType(Test) {
        useJUnitPlatform()
        systemProperties(System.getProperties())

        testLogging {
            lifecycle {
                events "started", "skipped", "failed", "standard_error", "standard_out"
                exceptionFormat "short"
            }
        }
    }
}